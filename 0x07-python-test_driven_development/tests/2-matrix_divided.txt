=======================
| TEST DIVIDE A MATRIX |
=======================

this test was made to check if the program will divide a
matrix by int or float number

Divide:
=======

``2-matrix_divided()`` returns the division of each 
elements of the matrix by int or float number

::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	
	>>> matrix_divided([[9], [6]], 2)
	[[4.5], [3.0]]

	>>> matrix_divided([2, 4, 6, 8, 10], 2)
	[1.0, 2.0, 3.0, 4.0, 5.0]

It also works with floating point values.

::
	>>> matrix_divided([4.5, 6.8, 7.3, 9.1], 6)
	[0.75, 1.13, 1.22, 1.52]
	
	>>> matrix_divided([[4.5, 6.8], [7.3, 9.1]], 6)
	[[0.75, 1.13], [1.22, 1.52]]

Analize div:
============

The program raised errors when div not is integer or float.

::
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Luffy")
	Traceback (most recent call last):
	TypeError: div must be a number

Analize matrix:
==============

The program raised errors when matrix have problems.

::
	>>> matrix_divided([[1, 2, 3], [4, 6]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[1, 2, 3], [4, "luffy", 6]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided("good morning", 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
