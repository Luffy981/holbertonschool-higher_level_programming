# doctest_2-matrix_divided.txt

=================================
File information 2-matrix_divided
=================================

Function that all elements of the matrix should be
divided by div, rounded to 2 decimal places.

Test case:
==========

- Importing the function from module:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided  

- Checking the matrix as list:
    >>> matrix_divided(None, 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

- Checking for division by zero:
    >>> matrix_divided([1, 3], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

- Checking normal use:
    >>> matrix_divided([[2, 4, 10, 6]], 2)
    [[1.0, 2.0, 5.0, 3.0]]
    
    >>> matrix_divided([[8.4, 6.9, 7.5, 3.5]], 6)
    [[1.4, 1.15, 1.25, 0.58]]

- Checking if div is None:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

- Checking difference len of matrix:
    >>> matrix_divided([[1, 2, 3], [5, 7, 8, 9]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

- Checking the absence of numbers in the matrix or something mixed:
    >>> matrix_divided([[1, "Bye", 4], [4.5, 6.9, 2]], 9)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
